name: domo
help: manage your projects the easy way
extensible: true
version: 2.0.0

environment_variables:
  - name: DOMO_HOME
    help: Directory where the projects will be managed
    default: ${HOME}/dev

  - name: DOMO_SHOW_CMD
    help: Command used to show backends & templates
    default: cat

dependencies:
  - git
  - gum

variables:
  - name: DATA_DIR
    value: ${HOME}/.local/share/domo

  - name: CONFIG_DIR
    value: ${HOME}/.config/domo

commands:
  - name: create
    help: Create a new project
    group: Project

    args:
      - name: path
        help: Path to the project
        validate: project_is_missing

    flags:
      - short: -t
        long: --template
        help: Name of the template
        arg: template
        required: true
        validate: template_exists

      - short: -b
        long: --backend
        help: Name of the backend used to open projects
        arg: backend
        validate: backend_exists

    examples:
      - domo create tools/recipe -t cargo
      - domo create tools/recipe -t cargo -b vscode

  - name: clone
    help: Clone a remote git repository
    group: Project

    args:
      - name: repository
        help: Remote repository url
        required: true

      - name: path
        help: Path to the project
        required: true

    examples:
      - domo clone git@github.com:alexis-moins/recipe.git tools/recipe

  - name: open
    help: Open a project
    group: Project
    alias: o

    args:
      - name: path
        help: Path to the project
        validate: project_exists
        required: false

    flags:
      - short: -b
        long: --backend
        help: Name of the backend used to open projects
        arg: backend
        validate: backend_exists

    examples:
      - domo open tools/recipe
      - domo open tools/recipe -b vscode

  - name: list
    alias: ls
    help: List projects
    group: Project

    examples:
      - domo ls
      - domo list

  - name: _install
    help: Installation helper command
    private: true
    footer: |
      This command is private and not intended for public use.

      It is used to install the domo script in a specific location, and it
      should not be used by end users. Use the `install.sh` script instead.

    args:
      - name: destination
        help: Path to install the script
        required: true

  - name: _uninstall
    help: Uninstallation helper command
    private: true
    footer: |
      This command is private and not intended for public use.

      It is used to uninstall the domo script, and it should not be used by
      end users. Use the `uninstall.sh` script instead.

    args:
      - name: destination
        help: Path to install the script
        required: true

  - name: space
    help: Space related commands

    commands:
      - name: add
        help: Add a new space

        args:
          - name: spaces
            help: Name of the spaces to add
            validate: space_is_missing

            repeatable: true
            required: true

        examples:
          - domo space add A B C

      - name: list
        alias: ls
        help: List spaces

        examples:
          - domo space ls
          - domo space list

  - name: template
    help: Template related commands
    alias: temp

    commands:
      - name: global
        alias: g
        help: Set a template as global

        args:
          - name: template
            help: Name of the template
            validate: template_exists

        examples:
          - pm template global
          - pm template global react

      - name: list
        alias: ls
        help: List templates

        examples:
          - domo template list

      - name: show
        help: Show a template

        args:
          - name: template
            help: Name of the template
            validate: template_exists
            required: true

        flags:
          - short: -x
            long: --exec
            arg: executable
            default: ${DOMO_SHOW_CMD}
            help: Command used to show the template

        examples:
          - domo template show cargo
          - domo template show cargo -x bat

      - name: add
        help: Add a new template

        args:
          - name: template
            help: Name of the template
            required: true
            validate: template_is_missing

        examples:
          - domo template add poetry

      - name: edit
        help: Edit a template
        alias: e

        args:
          - name: template
            help: Name of the template
            required: false
            validate: template_exists

        examples:
          - domo template edit
          - domo template edit python

      - name: which
        help: Locates a template

        args:
          - name: template
            help: Name of the template
            required: false
            validate: template_exists

        examples:
          - domo template which python

  - name: backend
    help: Backend related commands
    alias: back

    commands:
      - name: set
        help: Set the global backend

        args:
          - name: backend
            help: Name of the backend
            required: true
            validate: backend_exists

        examples:
          - domo backend set vscode

      - name: get
        help: Show the global backend

        examples:
          - domo backend get

      - name: list
        alias: ls
        help: List backends

        examples:
          - domo backend list

      - name: show
        help: Show a backend

        args:
          - name: backend
            help: Name of the backend
            validate: backend_exists

        flags:
          - short: -x
            long: --exec
            arg: executable
            default: ${DOMO_SHOW_CMD}
            help: Command used to show the backend

        examples:
          - domo backend show cargo
          - domo backend show cargo -x bat

      - name: add
        help: Add a new backend

        args:
          - name: backend
            help: Name of the backend
            required: true
            validate: backend_is_missing

        examples:
          - domo backend add vscode

      - name: edit
        help: Edit a backend

        args:
          - name: backend
            help: Name of the backend
            required: false
            validate: backend_exists

        examples:
          - domo backend edit
          - domo backend edit tmux

      - name: which
        help: Locates a backend

        args:
          - name: backend
            help: Name of the backend
            required: true
            validate: backend_exists

        examples:
          - domo backend which tmux

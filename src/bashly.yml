name: pm
help: manage your projects the easy way
extensible: true
version: 1.8.4

environment_variables:
  - name: PM_HOME
    help: Directory where the projects will be managed
    default: ${HOME}/dev

  - name: PM_BACKEND_SHOW_CMD
    help: Command used to show backends
    default: cat

  - name: PM_TEMPLATE_SHOW_CMD
    help: Command used to show templates
    default: cat

dependencies:
  - git
  - gum

commands:
  - name: new
    help: Create a new empty project
    group: Project

    args:
      - name: path
        help: Path to the project (relative to \$PM_HOME)
        validate: project_is_missing

    flags:
      - short: -s
        long: --space
        help: Space to create the project in
        arg: space
        validate: space_exists
        needs: [--name]

      - short: -n
        long: --name
        help: Name of the project
        arg: name
        needs: [--space]

      - short: -t
        long: --template
        help: Name of the template
        arg: template
        validate: template_exists

      - short: -b
        long: --backend
        help: Name of the backend used to open projects
        arg: backend
        validate: backend_exists

    examples:
      - pm new tools/recipe
      - pm new -n recipe -s tools -t cargo

  - name: clone
    help: Clone a remote git repository
    group: Project

    args:
      - name: repository
        help: Remote repository url
        required: true

    flags:
      - short: -s
        long: --space
        help: Space to clone the project in
        arg: space
        required: true
        validate: space_exists

      - short: -n
        long: --name
        help: Name of the project
        arg: name
        required: true

    examples:
      - pm clone git@github.com:alexis-moins/recipe.git -s tools -n recipe

  - name: open
    help: Open a project
    group: Project
    alias: o

    args:
      - name: path
        help: Path to the project (relative to \$PM_HOME)
        validate: project_exists
        required: false

    flags:
      - short: -s
        long: --space
        help: Space where the project is located
        arg: space
        validate: space_exists
        needs: [--name]

      - short: -n
        long: --name
        help: Name of the project
        arg: name
        needs: [--space]

      - short: -b
        long: --backend
        help: Name of the backend used to open projects
        arg: backend
        validate: backend_exists

    examples:
      - pm open tools/recipe
      - pm open -s tools -n recipe

  - name: filter
    help: Filter projects
    group: Project

    examples:
      - pm filter

  - name: list
    alias: ls
    help: List projects
    group: Project

    examples:
      - pm ls
      - pm list

  - name: space
    help: Add, list and filter spaces

    commands:
      - name: add
        help: Add a new space

        args:
          - name: space
            help: Name of the space to add
            required: true
            validate: space_is_missing

        examples:
          - pm space add personal

      - name: list
        alias: ls
        help: List added spaces

        examples:
          - pm space ls
          - pm space list

      - name: filter
        help: Filter spaces

        examples:
          - pm space filter

  - name: template
    help: Template related commands
    alias: temp

    commands:
      - name: global
        alias: g
        help: Set a template as global

        args:
          - name: template
            help: Name of the template
            validate: template_exists

        examples:
          - pm template global
          - pm template global react

      - name: list
        alias: ls
        help: List templates

        flags:
          - short: -o
            long: --only
            help: List only specific templates
            arg: group
            allowed: [user, default]

        examples:
          - pm template list
          - pm template list --only=default

      - name: filter
        help: Filter templates

        flags:
          - short: -o
            long: --only
            help: Filter only specific templates
            arg: group
            allowed: [user, default]

        examples:
          - pm template filter
          - pm template filter --only=user

      - name: show
        help: Show a template

        args:
          - name: template
            help: Name of the template
            validate: template_exists
            required: true

        flags:
          - short: -x
            long: --exec
            arg: executable
            default: ${PM_TEMPLATE_SHOW_CMD}
            help: Command used to show the template

        examples:
          - pm template show cargo
          - pm template show cargo -x bat

      - name: new
        help: Create a new template

        args:
          - name: template
            help: Name of the template
            required: true
            validate: template_is_missing

        examples:
          - pm template new poetry

      - name: edit
        help: Edit a template
        alias: e

        args:
          - name: template
            help: Name of the template
            required: false
            validate: template_exists

        examples:
          - pm template edit
          - pm template edit python

      - name: which
        help: Locates a template

        args:
          - name: template
            help: Name of the template
            required: false
            validate: template_exists

        examples:
          - pm template which python

  - name: backend
    help: Backend related commands
    alias: back

    commands:
      - name: global
        alias: g
        help: Set a backend as global

        args:
          - name: backend
            help: Name of the backend
            validate: backend_exists

        examples:
          - pm backend global
          - pm backend global vscode

      - name: list
        alias: ls
        help: List backends

        flags:
          - short: -o
            long: --only
            help: List only specific backends
            arg: group
            allowed: [user, default]

        examples:
          - pm backend list
          - pm backend list --only=default

      - name: filter
        help: Filter backends

        flags:
          - short: -o
            long: --only
            help: Filter only specific backends
            arg: group
            allowed: [user, default]

        examples:
          - pm backend filter
          - pm backend filter --only=user

      - name: show
        help: Show backends

        args:
          - name: backend
            help: Name of the backend
            validate: backend_exists
            required: true

        flags:
          - short: -x
            long: --exec
            arg: executable
            default: ${PM_BACKEND_SHOW_CMD}
            help: Command used to show the backend

        examples:
          - pm backend show cargo
          - pm backend show cargo -x bat

      - name: new
        help: Create a new backend

        args:
          - name: backend
            help: Name of the backend
            required: true
            validate: backend_is_missing

        examples:
          - pm backend new vscode

      - name: edit
        help: Edit a backend

        args:
          - name: backend
            help: Name of the backend
            required: false
            validate: backend_exists

        examples:
          - pm backend edit
          - pm backend edit tmux

      - name: which
        help: Locates a backend

        args:
          - name: backend
            help: Name of the backend
            required: true
            validate: backend_exists

        examples:
          - pm backend which tmux
